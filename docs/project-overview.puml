@startuml WYOS Complete Project Overview

' Styling
skinparam componentStyle rectangle
skinparam packageStyle rectangle
skinparam backgroundColor white
skinparam defaultFontName Arial
skinparam arrowColor #666666
skinparam componentBackgroundColor #FFFFFF
skinparam packageBackgroundColor #FFFFFF
skinparam stereotypeCBackgroundColor #A9DCDF
skinparam classFontSize 12
skinparam noteFontSize 11

' Title
title WYOS - Complete Project Overview

' Database Schema
package "Appwrite Database Collections" {
  class Users {
    + $id: string
    + email: string
    + name: string
    + preferences: UserPrefs
    + createdAt: DateTime
    + updatedAt: DateTime
  }

  class UserPrefs {
    + theme: string
    + emailNotifications: boolean
    + viewMode: string
  }

  class Teams {
    + $id: string
    + name: string
    + members: string[]
    + roles: string[]
  }

  class Subscriptions {
    + $id: string
    + userId: string
    + planId: string
    + status: string
    + currentPeriodEnd: DateTime
  }

  class KnowledgeCategories {
    + $id: string
    + slug: string
    + name: string
    + description: string
    + mainCategoryId: string
    + order: number
  }

  class KnowledgeEntries {
    + $id: string
    + title: string
    + slug: string
    + summary: string
    + content: string
    + categoryIds: string[]
    + authorId: string
    + createdAt: DateTime
    + updatedAt: DateTime
  }

  class ResourceCategories {
    + $id: string
    + slug: string
    + name: string
    + description: string
    + mainCategoryId: string
  }

  class Resources {
    + $id: string
    + title: string
    + slug: string
    + summary: string
    + content: string
    + resourcesCategoryIds: string[]
    + authorId: string
  }
}

' Frontend Architecture
package "Frontend Application" {
  package "App Router Structure" {
    package "(marketing)" {
      [Landing Page]
      [About]
      [Pricing]
    }

    package "(auth)" {
      [Login]
      [Register]
      [Reset Password]
      [Email Verification]
    }

    package "(core)" {
      [Dashboard]
      [Knowledge Hub]
      [Resources Center]
      [Profile Settings]
    }

    package "(subscription)" {
      [Plans]
      [Billing]
      [Payment History]
    }
  }

  package "Components" {
    package "shared/" {
      [InfiniteGrid]
      [Layout Components]
      [Content Components]
    }

    package "ui/" {
      [ShadcnUI Components]
      [Custom UI Components]
    }

    package "core/" {
      package "knowledge/" {
        [KnowledgeGrid]
        [KnowledgeCard]
        [FeaturedKnowledge]
      }

      package "resources/" {
        [ResourceGrid]
        [ResourceCard]
        [CategoryNavigation]
      }
    }
  }

  package "State Management" {
    package "Zustand Stores" {
      [AuthStore]
      [KnowledgeStore]
      [ResourceStore]
      [UIStore]
    }

    package "TanStack Query" {
      [QueryClient]
      [QueryProvider]
      [Mutations]
    }
  }

  package "Data Access Layer" {
    abstract class AppwriteBaseRepository<T> {
      + databaseId: string
      + collectionId: string
      + mapDocument()
      + createDocument()
      + getDocument()
      + listDocuments()
      + updateDocument()
      + deleteDocument()
    }

    class KnowledgeEntryRepository
    class KnowledgeCategoryRepository
    class ResourceEntryRepository
    class ResourceCategoryRepository

    package "Services" {
      [KnowledgeService]
      [ResourceService]
      [AuthService]
      [SubscriptionService]
    }
  }
}

' External Services
package "External Services" {
  [Appwrite Cloud] as appwrite
  [Stripe Payments] as stripe
}

' Middleware
package "Middleware" {
  [Route Protection]
  [Session Validation]
  [API Authentication]
}

' Relationships
Users "1" -- "*" KnowledgeEntries: authors
Users "1" -- "*" Resources: authors
Users "1" -- "1" Subscriptions: has
Teams "*" -- "*" Users: belongs to

KnowledgeCategories "1" -- "*" KnowledgeEntries: categorizes
ResourceCategories "1" -- "*" Resources: categorizes

AppwriteBaseRepository <|-- KnowledgeEntryRepository
AppwriteBaseRepository <|-- KnowledgeCategoryRepository
AppwriteBaseRepository <|-- ResourceEntryRepository
AppwriteBaseRepository <|-- ResourceCategoryRepository

' Service Dependencies
KnowledgeService --> KnowledgeEntryRepository
KnowledgeService --> KnowledgeCategoryRepository
ResourceService --> ResourceEntryRepository
ResourceService --> ResourceCategoryRepository
AuthService --> appwrite
SubscriptionService --> stripe

' Frontend Data Flow
[QueryClient] --> [KnowledgeService]
[QueryClient] --> [ResourceService]
[QueryClient] --> [AuthService]
[QueryClient] --> [SubscriptionService]

' Auth Flow
[Route Protection] --> AuthService
[Session Validation] --> AuthService
[API Authentication] --> AuthService

' Legend
legend right
  |= Component Type |= Description |
  | Database Collections | Appwrite database schema |
  | Frontend Components | React/Next.js components |
  | State Management | Client and server state |
  | Services | Business logic layer |
  | External Services | Third-party integrations |
endlegend

@enduml
